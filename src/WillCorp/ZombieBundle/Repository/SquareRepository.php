<?php
/**
 * This file is part of the WillCorpZombieBundle package
 *
 * (c) Yann EugonÃ© <yann.eugone@gmail.com> ; William Sauvan <william.sauvan@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
namespace WillCorp\ZombieBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;
use Doctrine\ORM\QueryBuilder;
use WillCorp\ZombieBundle\Entity\Square;

/**
 * SquareRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SquareRepository extends EntityRepository
{
    /**
     * Return all available squares (no stronghold assigned)
     *
     * @return Square[]
     */
    public function findAvailable()
    {
        return $this->getAvailableQuery()->getQuery()->execute();
    }

    /**
     * Return an available square (no stronghold assigned)
     *
     * @return Square|false
     */
    public function findOneAvailable()
    {
        try {
            return $this->getAvailableQuery()
                ->setMaxResults(1)
                ->setFirstResult(1)
                ->getQuery()->getSingleResult();
        } catch (NoResultException $e) {
            return false;
        }
    }

    /**
     * Get the query builder use by the "findAvailable" & "findOneAvailable" methods
     *
     * @return QueryBuilder
     */
    protected function getAvailableQuery()
    {
        $qb = $this->createQueryBuilder('sq');

        return $qb->leftJoin('sq.stronghold', 'st')
            ->andWhere($qb->expr()->isNull('st.id'));
    }
}
